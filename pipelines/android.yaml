
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/SmartHub.MobileApp
      - src/SmartHub.Models

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
  apkPath: com.companyname.smarthub.mobileapp.apk
  solutionPath: 'src/Smart Hub.sln'
  projectPath: src/SmartHub.MobileApp/SmartHub.MobileApp.Android
  configPath: src/SmartHub.MobileApp/SmartHub.MobileApp/Config.nogit.cs
  artifactName: publishedApk
  appCenterSlug: live.neville-live.com/SmartHub-Control
  keyStoreFile: smarthub.jks

# to be defined as secrets:
  # keystore.password
  # key.password


stages:
  - stage: Build
    displayName: Build App
    jobs:

      - job: XamarinCompile
        displayName: Building xamarin android

        steps:

          - task: file-creator@5
            displayName: Create config file
            inputs:
              filepath: $(configPath)
              fileoverwrite: true
              filecontent: |
                namespace SmartHub.MobileApp
                {
                    static partial class Config
                    {
                        static Config()
                        {
                            Endpoint = "$(secrets.endpoint)";
                            AppCenter = "$(secrets.appCenter)";
                        }
                    }
                }


          - task: NuGetToolInstaller@1

          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              includePreviewVersions: true
              version: 6.0.101
              installationPath: $(Agent.ToolsDirectory)/dotnet
          
          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: '$(solutionPath)'
              feedsToUse: 'select'
          
          - task: android-manifest-version@1
            inputs:
              sourcePath: $(projectPath)/Properties/AndroidManifest.xml
              printFile: true
              versionCode: $(Build.BuildId)
              versionName: 1.1.$(Build.BuildId)

          - task: XamarinAndroid@1
            inputs:
              projectFile: $(projectPath)/*.csproj
              outputDirectory: '$(outputDirectory)'
              configuration: '$(buildConfiguration)'
              msbuildVersionOption: 'latest'

          - publish: $(outputDirectory)
            artifact: $(artifactName)
        

  - stage: AppCenterDeploy
    displayName: Deploy to App Center
    jobs:

      - job: AppCenter

        steps:

        - download: current
          artifact: $(artifactName)

        - task: AndroidSigning@3
          inputs:
            apkFiles: $(Pipeline.Workspace)/$(artifactName)/$(apkPath)
            apksignerKeystoreFile: $(keyStoreFile)
            apksignerKeystorePassword: '$(keystore.password)'
            apksignerKeystoreAlias: 'key0'
            apksignerKeyPassword: '$(key.password)'

        - task: AppCenterDistribute@3
          inputs:
            serverEndpoint: 'My App Center'
            appSlug: $(appCenterSlug)
            appFile: $(Pipeline.Workspace)/$(artifactName)/$(apkPath)
            symbolsOption: 'Android'
            releaseNotesOption: 'input'
            releaseNotesInput: 'The lazy developer hasn''t added any actual release notes.'
            destinationType: 'groups'
          

