<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:m="clr-namespace:SmartHub.Models.SmartThings;assembly=SmartHub.Models"
             xmlns:component="clr-namespace:SmartHub.MobileApp.Components" 
             xmlns:viewmodels="clr-namespace:SmartHub.MobileApp.ViewModels" 
             xmlns:convert="clr-namespace:SmartHub.MobileApp.ValueConverters"
             xmlns:control="clr-namespace:SmartHub.MobileApp.Controls"
             xmlns:selectors="clr-namespace:SmartHub.MobileApp.TemplateSelectors"
             xmlns:e="clr-namespace:SmartHub.Models.Entities;assembly=SmartHub.Models"
             xmlns:tools="clr-namespace:Xamarin.CommunityToolkit.UI.Views;assembly=Xamarin.CommunityToolkit"
             x:DataType="viewmodels:DevicePopupViewModel"
             x:Class="SmartHub.MobileApp.Pages.DevicePopupPage">

    <ContentPage.Resources>

        <DataTemplate x:Key="footerTemplate" 
                      x:DataType="viewmodels:DevicePopupViewModel">
            <Button Text="Clear linking" 
                    BackgroundColor="OrangeRed"
                    Command="{Binding DeleteCmd}"/>
        </DataTemplate>

        <Style TargetType="Label" x:Key="titleStyle">
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="VerticalTextAlignment" Value="Center" />
        </Style>

        <Style TargetType="Button" x:Key="tabButton">
            <Setter Property="BackgroundColor" Value="CadetBlue" />
        </Style>
        

        <!--Aspect="Uniform"-->
                                  <!--HeightRequest="30"
                                  WidthRequest="20"
                                  Fill="Blue"-->

        <Style TargetType="Path" x:Key="dropStyle">
            <Setter Property="Aspect" Value="Uniform" />
            <Setter Property="HeightRequest" Value="30" />
            <Setter Property="WidthRequest" Value="20" />
            <Setter Property="Fill" Value="Blue" />
        </Style>
        
        
        <convert:ExpandedToPathData x:Key="expandedToPath" />

       
        
    </ContentPage.Resources>
    
    
    <ContentPage.Content>


        <Grid ColumnDefinitions="*, 40"
              RowDefinitions="45, 60, *">
            
            <Path 
                Data="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z"
                Grid.Column="1"
                Margin="0, 0, 5, 0"
                Aspect="Uniform"
                Fill="Black">
                <Path.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding CloseCmd}" />
                </Path.GestureRecognizers>
            </Path>

            <Grid ColumnDefinitions="*, *"
                  Grid.Row="1" Grid.ColumnSpan="2"
                  Padding="10">
                <Button Text="Devices"
                        Style="{StaticResource tabButton}" 
                        Command="{Binding SwitchTabCmd}"
                        CommandParameter="devices" />
                <Button Text="Scenes"
                        Grid.Column="1"
                        Style="{StaticResource tabButton}"
                        Command="{Binding SwitchTabCmd}"
                        CommandParameter="scenes" />
            </Grid>
            
            <ActivityIndicator Grid.Row="2" Grid.ColumnSpan="2"
                               IsVisible="{Binding LoadControl.IsLoading}" 
                               IsRunning="{Binding LoadControl.IsLoading}"
                               IsEnabled="{Binding LoadControl.IsLoading}"/>

            <CollectionView Grid.Row="2" Grid.ColumnSpan="2"
                            IsVisible="{Binding IsDevicesDisplayed, Converter={StaticResource inverseBoolConverter}}"
                            ItemsSource="{Binding Scenes}"
                            Footer="{Binding}"
                            FooterTemplate="{StaticResource footerTemplate}"
                            Margin="10, 0">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical"
                                     VerticalItemSpacing="20" />
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="m:SceneItem">
                        <Button Text="{Binding SceneName}"
                                Command="{Binding SubmitScene, 
                                                  Source={RelativeSource AncestorType={x:Type viewmodels:DevicePopupViewModel}}}"
                                CommandParameter="{Binding SceneId}" />
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            
            <CollectionView Grid.Row="2" Grid.ColumnSpan="2"
                            IsVisible="{Binding IsDevicesDisplayed}"
                            ItemsSource="{Binding Devices}"
                            Footer="{Binding}"
                            FooterTemplate="{StaticResource footerTemplate}"
                            Margin="10, 0">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical"
                                     VerticalItemSpacing="20" />
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>

                    <DataTemplate x:DataType="control:ExpandableData">
                        <Frame BorderColor="LightGray"
                               CornerRadius="10"
                               Padding="10">
                            <Grid ColumnDefinitions="*, auto"
                                  RowDefinitions="30, *"
                                  Padding="20, 0, 20, 0">

                                <!--#region row 1 -->
                                <Label Text="{Binding Text}" 
                                   Style="{StaticResource titleStyle}" />

                                <!--<Ellipse Grid.Column="1"
                                     Stroke="Blue"
                                     StrokeThickness="2"
                                     HeightRequest="35"
                                     WidthRequest="35"/>-->
                                <Path Grid.Column="1"
                                  Style="{StaticResource dropStyle}"
                                  Data="{Binding LoadControl.IsExpanded, 
                                                 Converter={StaticResource expandedToPath}}" >
                                    <Path.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding LoadControl.ExpandOrCollapseCmd}" />
                                    </Path.GestureRecognizers>
                                </Path>
                                <!--#endregion-->

                                <!--device items-->
                                <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                    <component:ExpandableCollection LoadControl="{Binding LoadControl}"
                                                            
                                                            Margin="30, 30, 0, 0">
                                        <component:ExpandableCollection.ItemsLayout>
                                            <GridItemsLayout Orientation="Vertical"
                                                         VerticalItemSpacing="20" />
                                        </component:ExpandableCollection.ItemsLayout>
                                        <component:ExpandableCollection.ItemTemplate>
                                            <DataTemplate>
                                                <Grid ColumnDefinitions="*, auto"
                                                      RowDefinitions="30, 1, auto">
                                                    <Label Text="{Binding Text}" 
                                                       Style="{StaticResource titleStyle}" />
                                                    <Path Data="{Binding LoadControl.IsExpanded, 
                                                      Converter={StaticResource expandedToPath}}"
                                                      Grid.Column="1"
                                                      Style="{StaticResource dropStyle}">
                                                        <Path.GestureRecognizers>
                                                            <TapGestureRecognizer Command="{Binding LoadControl.ExpandOrCollapseCmd}" />
                                                        </Path.GestureRecognizers>
                                                    </Path>

                                                    <Line Grid.Row="1" Grid.ColumnSpan="2"
                                                      BackgroundColor="Red" />

                                                    <!--commands-->
                                                    <component:ExpandableCollection LoadControl="{Binding LoadControl}"
                                                                                    Grid.Row="2">
                                                        <component:ExpandableCollection.ItemsLayout>
                                                            <GridItemsLayout Orientation="Horizontal"
                                                                             HorizontalItemSpacing="10"/>
                                                        </component:ExpandableCollection.ItemsLayout>
                                                        <component:ExpandableCollection.ItemTemplate>
                                                            <DataTemplate x:DataType="e:DeviceAction">
                                                                <Grid RowDefinitions="40">
                                                                    <Button Text="{Binding Command}"
                                                                            Command="{Binding SubmitDevice, 
                                                                                              Source={RelativeSource AncestorType={x:Type viewmodels:DevicePopupViewModel}}}"
                                                                            CommandParameter="{Binding}"
                                                                            HeightRequest="60"
                                                                            BackgroundColor="GreenYellow"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </component:ExpandableCollection.ItemTemplate>
                                                    </component:ExpandableCollection>
                                                </Grid>
                                            </DataTemplate>
                                        </component:ExpandableCollection.ItemTemplate>
                                    </component:ExpandableCollection>
                                </Grid>
                            </Grid>
                        </Frame>
                    </DataTemplate>
                </CollectionView.ItemTemplate>

            </CollectionView>


        </Grid>
        
    </ContentPage.Content>
</ContentPage>